on:
  push:
    branches:
      - main
jobs:
  record-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: "11"
          cache: "maven"
          distribution: "zulu"
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Retrieving version
        run: |
          VERSION_FORMAT='${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}'
          mvn -q build-helper:parse-version versions:set -DnewVersion="${VERSION_FORMAT}" versions:commit
          echo "VERSION=$(grep \<version\> pom.xml | xargs | awk -F '[<>]' '{ print $3}')" >> $GITHUB_ENV

      - name: Releasing
        run: |
          echo "###################  using version: v$VERSION ###################"

          # tag repo
          git config --global user.email "ci@uvasoftware.com"
          git config --global user.name "Github Actions"
          git tag -a v"${VERSION}" -m "Release by Github Actions v${{ env.VERSION }}"
          git push origin v"${{ env.VERSION }}"

      - name: Bumping version
        run: |
          # bumping it to a new snapshot release:
          # shellcheck disable=SC2016
          VERSION_FORMAT='${parsedVersion.majorVersion}.${parsedVersion.nextMinorVersion}.${parsedVersion.incrementalVersion}-SNAPSHOT'
          mvn -q build-helper:parse-version versions:set -DnewVersion="${VERSION_FORMAT}" versions:commit

          VERSION=$(grep \<version\> pom.xml | xargs | awk -F '[<>]' '{ print $3}')

          echo "next version is: $VERSION"

          #commit version change
          git status
          git commit -a -m "bump to ${VERSION} [ci skip]"
          git push origin main


  deploy-production-us:
    if: "!contains(github.event.commits[0].message, '[ci skip]')"
    runs-on: ubuntu-latest
    needs: [ record-release ]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v2
        with:
          java-version: "11"
          cache: "maven"
          distribution: "zulu"
      - uses: actions/cache@v1
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
      - name: Deploy
        run: ./.github/workflows/deploy.sh
